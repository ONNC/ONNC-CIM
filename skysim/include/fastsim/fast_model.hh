#pragma once
#include <string>
#include "sim-module/mmap_device.hh"
#include "sim-module/sim_memory.hh"
#include "fastsim/register-fast_model.h"
#include "fastsim/fastmodel-define.h"

class FastModel : public MMapDevice {
	using extmem_type = SimMemory<EXTMEM_SIZE>;
	extmem_type *memory;
		reg_type				add_launch;
		reg_type				add_input_a;
		reg_type				add_input_a_ndim;
		reg_type				add_input_a_dims;
		reg_type				add_input_b;
		reg_type				add_input_b_ndim;
		reg_type				add_input_b_dims;
		reg_type				add_output_c;
		reg_type				add_output_c_ndim;
		reg_type				add_output_c_dims;
		reg_type				add_tensor_name;
		reg_type				averagepool_launch;
		reg_type				averagepool_input_x;
		reg_type				averagepool_input_x_ndim;
		reg_type				averagepool_input_x_dims;
		reg_type				averagepool_output_y;
		reg_type				averagepool_output_y_ndim;
		reg_type				averagepool_output_y_dims;
		reg_type				averagepool_auto_pad;
		reg_type				averagepool_count_include_pad;
		reg_type				averagepool_kernel_shape;
		reg_type				averagepool_number_of_kernel_shape;
		reg_type				averagepool_pads;
		reg_type				averagepool_number_of_pads;
		reg_type				averagepool_strides;
		reg_type				averagepool_number_of_strides;
		reg_type				averagepool_tensor_name;
		reg_type				batchnormalization_launch;
		reg_type				batchnormalization_input_x;
		reg_type				batchnormalization_input_x_ndim;
		reg_type				batchnormalization_input_x_dims;
		reg_type				batchnormalization_input_scale;
		reg_type				batchnormalization_input_scale_ndim;
		reg_type				batchnormalization_input_scale_dims;
		reg_type				batchnormalization_input_b;
		reg_type				batchnormalization_input_b_ndim;
		reg_type				batchnormalization_input_b_dims;
		reg_type				batchnormalization_input_mean;
		reg_type				batchnormalization_input_mean_ndim;
		reg_type				batchnormalization_input_mean_dims;
		reg_type				batchnormalization_input_var;
		reg_type				batchnormalization_input_var_ndim;
		reg_type				batchnormalization_input_var_dims;
		reg_type				batchnormalization_output_y;
		reg_type				batchnormalization_output_y_ndim;
		reg_type				batchnormalization_output_y_dims;
		reg_type				batchnormalization_output_mean;
		reg_type				batchnormalization_output_mean_ndim;
		reg_type				batchnormalization_output_mean_dims;
		reg_type				batchnormalization_output_var;
		reg_type				batchnormalization_output_var_ndim;
		reg_type				batchnormalization_output_var_dims;
		reg_type				batchnormalization_output_saved_mean;
		reg_type				batchnormalization_output_saved_mean_ndim;
		reg_type				batchnormalization_output_saved_mean_dims;
		reg_type				batchnormalization_output_saved_var;
		reg_type				batchnormalization_output_saved_var_ndim;
		reg_type				batchnormalization_output_saved_var_dims;
		reg_type				batchnormalization_epsilon;
		reg_type				batchnormalization_momentum;
		reg_type				batchnormalization_spatial;
		reg_type				batchnormalization_tensor_name;
		reg_type				concat_launch;
		reg_type				concat_input_inputs;
		reg_type				concat_input_inputs_ntensor;
		reg_type				concat_input_inputs_ndim;
		reg_type				concat_input_inputs_dims;
		reg_type				concat_output_concat_result;
		reg_type				concat_output_concat_result_ndim;
		reg_type				concat_output_concat_result_dims;
		reg_type				concat_axis;
		reg_type				concat_tensor_name;
		reg_type				conv_launch;
		reg_type				conv_input_x;
		reg_type				conv_input_x_ndim;
		reg_type				conv_input_x_dims;
		reg_type				conv_input_w;
		reg_type				conv_input_w_ndim;
		reg_type				conv_input_w_dims;
		reg_type				conv_input_b;
		reg_type				conv_input_b_ndim;
		reg_type				conv_input_b_dims;
		reg_type				conv_output_y;
		reg_type				conv_output_y_ndim;
		reg_type				conv_output_y_dims;
		reg_type				conv_auto_pad;
		reg_type				conv_dilations;
		reg_type				conv_number_of_dilations;
		reg_type				conv_group;
		reg_type				conv_kernel_shape;
		reg_type				conv_number_of_kernel_shape;
		reg_type				conv_pads;
		reg_type				conv_number_of_pads;
		reg_type				conv_strides;
		reg_type				conv_number_of_strides;
		reg_type				conv_tensor_name;
		reg_type				gemm_launch;
		reg_type				gemm_input_a;
		reg_type				gemm_input_a_ndim;
		reg_type				gemm_input_a_dims;
		reg_type				gemm_input_b;
		reg_type				gemm_input_b_ndim;
		reg_type				gemm_input_b_dims;
		reg_type				gemm_input_c;
		reg_type				gemm_input_c_ndim;
		reg_type				gemm_input_c_dims;
		reg_type				gemm_output_y;
		reg_type				gemm_output_y_ndim;
		reg_type				gemm_output_y_dims;
		reg_type				gemm_alpha;
		reg_type				gemm_beta;
		reg_type				gemm_transa;
		reg_type				gemm_transb;
		reg_type				gemm_tensor_name;
		reg_type				globalaveragepool_launch;
		reg_type				globalaveragepool_input_x;
		reg_type				globalaveragepool_input_x_ndim;
		reg_type				globalaveragepool_input_x_dims;
		reg_type				globalaveragepool_output_y;
		reg_type				globalaveragepool_output_y_ndim;
		reg_type				globalaveragepool_output_y_dims;
		reg_type				globalaveragepool_tensor_name;
		reg_type				lrn_launch;
		reg_type				lrn_input_x;
		reg_type				lrn_input_x_ndim;
		reg_type				lrn_input_x_dims;
		reg_type				lrn_output_y;
		reg_type				lrn_output_y_ndim;
		reg_type				lrn_output_y_dims;
		reg_type				lrn_alpha;
		reg_type				lrn_beta;
		reg_type				lrn_bias;
		reg_type				lrn_size;
		reg_type				lrn_tensor_name;
		reg_type				maxpool_launch;
		reg_type				maxpool_input_x;
		reg_type				maxpool_input_x_ndim;
		reg_type				maxpool_input_x_dims;
		reg_type				maxpool_output_y;
		reg_type				maxpool_output_y_ndim;
		reg_type				maxpool_output_y_dims;
		reg_type				maxpool_output_indices;
		reg_type				maxpool_output_indices_ndim;
		reg_type				maxpool_output_indices_dims;
		reg_type				maxpool_auto_pad;
		reg_type				maxpool_kernel_shape;
		reg_type				maxpool_number_of_kernel_shape;
		reg_type				maxpool_pads;
		reg_type				maxpool_number_of_pads;
		reg_type				maxpool_storage_order;
		reg_type				maxpool_strides;
		reg_type				maxpool_number_of_strides;
		reg_type				maxpool_tensor_name;
		reg_type				mul_launch;
		reg_type				mul_input_a;
		reg_type				mul_input_a_ndim;
		reg_type				mul_input_a_dims;
		reg_type				mul_input_b;
		reg_type				mul_input_b_ndim;
		reg_type				mul_input_b_dims;
		reg_type				mul_output_c;
		reg_type				mul_output_c_ndim;
		reg_type				mul_output_c_dims;
		reg_type				mul_tensor_name;
		reg_type				relu_launch;
		reg_type				relu_input_x;
		reg_type				relu_input_x_ndim;
		reg_type				relu_input_x_dims;
		reg_type				relu_output_y;
		reg_type				relu_output_y_ndim;
		reg_type				relu_output_y_dims;
		reg_type				relu_tensor_name;
		reg_type				reshape_launch;
		reg_type				reshape_input_data;
		reg_type				reshape_input_data_ndim;
		reg_type				reshape_input_data_dims;
		reg_type				reshape_input_shape;
		reg_type				reshape_input_shape_ndim;
		reg_type				reshape_input_shape_dims;
		reg_type				reshape_output_reshaped;
		reg_type				reshape_output_reshaped_ndim;
		reg_type				reshape_output_reshaped_dims;
		reg_type				reshape_tensor_name;
		reg_type				softmax_launch;
		reg_type				softmax_input_input;
		reg_type				softmax_input_input_ndim;
		reg_type				softmax_input_input_dims;
		reg_type				softmax_output_output;
		reg_type				softmax_output_output_ndim;
		reg_type				softmax_output_output_dims;
		reg_type				softmax_axis;
		reg_type				softmax_tensor_name;
		reg_type				sum_launch;
		reg_type				sum_input_data_0;
		reg_type				sum_input_data_0_ntensor;
		reg_type				sum_input_data_0_ndim;
		reg_type				sum_input_data_0_dims;
		reg_type				sum_output_sum;
		reg_type				sum_output_sum_ndim;
		reg_type				sum_output_sum_dims;
		reg_type				sum_tensor_name;
		reg_type				transpose_launch;
		reg_type				transpose_input_data;
		reg_type				transpose_input_data_ndim;
		reg_type				transpose_input_data_dims;
		reg_type				transpose_output_transposed;
		reg_type				transpose_output_transposed_ndim;
		reg_type				transpose_output_transposed_dims;
		reg_type				transpose_perm;
		reg_type				transpose_number_of_perm;
		reg_type				transpose_tensor_name;
		reg_type				unsqueeze_launch;
		reg_type				unsqueeze_input_data;
		reg_type				unsqueeze_input_data_ndim;
		reg_type				unsqueeze_input_data_dims;
		reg_type				unsqueeze_output_expanded;
		reg_type				unsqueeze_output_expanded_ndim;
		reg_type				unsqueeze_output_expanded_dims;
		reg_type				unsqueeze_axes;
		reg_type				unsqueeze_number_of_axes;
		reg_type				unsqueeze_tensor_name;

		static const std::string dump_extension;
		void dump_output_tensor(reg_type start_, reg_type ndim_, reg_type dims_, reg_type tensorname_);
		template<typename T>
		T **get_multiple_tensor_info(address_type *addrs, size_t ntensor);
		void on_set_launch_add(reg_type data);
		void on_set_launch_averagepool(reg_type data);
		void on_set_launch_batchnormalization(reg_type data);
		void on_set_launch_concat(reg_type data);
		void on_set_launch_conv(reg_type data);
		void on_set_launch_gemm(reg_type data);
		void on_set_launch_globalaveragepool(reg_type data);
		void on_set_launch_lrn(reg_type data);
		void on_set_launch_maxpool(reg_type data);
		void on_set_launch_mul(reg_type data);
		void on_set_launch_relu(reg_type data);
		void on_set_launch_reshape(reg_type data);
		void on_set_launch_softmax(reg_type data);
		void on_set_launch_sum(reg_type data);
		void on_set_launch_transpose(reg_type data);
		void on_set_launch_unsqueeze(reg_type data);

	public:
		FastModel(EventQueue &eq, extmem_type *m) : MMapDevice{eq, "FastModel"}, memory{m}
			, add_launch{0}
			, averagepool_launch{0}
			, batchnormalization_launch{0}
			, concat_launch{0}
			, conv_launch{0}
			, gemm_launch{0}
			, globalaveragepool_launch{0}
			, lrn_launch{0}
			, maxpool_launch{0}
			, mul_launch{0}
			, relu_launch{0}
			, reshape_launch{0}
			, softmax_launch{0}
			, sum_launch{0}
			, transpose_launch{0}
			, unsqueeze_launch{0}
			{}
	  	~FastModel() override = default;

	  	reg_type regRead(SimObject *sender, address_type addr, transaction_id_type trans_id) override {
	    	const address_type offset    = static_cast<address_type>(addr & 0xfff);
			switch(offset/4){
				GET_REG_BY_IDX( ADD_LAUNCH_IDX, add_launch);
				GET_REG_BY_IDX( ADD_INPUT_A_IDX, add_input_a);
				GET_REG_BY_IDX( ADD_INPUT_A_NDIM_IDX, add_input_a_ndim);
				GET_REG_BY_IDX( ADD_INPUT_A_DIMS_IDX, add_input_a_dims);
				GET_REG_BY_IDX( ADD_INPUT_B_IDX, add_input_b);
				GET_REG_BY_IDX( ADD_INPUT_B_NDIM_IDX, add_input_b_ndim);
				GET_REG_BY_IDX( ADD_INPUT_B_DIMS_IDX, add_input_b_dims);
				GET_REG_BY_IDX( ADD_OUTPUT_C_IDX, add_output_c);
				GET_REG_BY_IDX( ADD_OUTPUT_C_NDIM_IDX, add_output_c_ndim);
				GET_REG_BY_IDX( ADD_OUTPUT_C_DIMS_IDX, add_output_c_dims);
				GET_REG_BY_IDX( ADD_TENSOR_NAME_IDX, add_tensor_name);
				GET_REG_BY_IDX( AVERAGEPOOL_LAUNCH_IDX, averagepool_launch);
				GET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_IDX, averagepool_input_x);
				GET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_NDIM_IDX, averagepool_input_x_ndim);
				GET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_DIMS_IDX, averagepool_input_x_dims);
				GET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_IDX, averagepool_output_y);
				GET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_NDIM_IDX, averagepool_output_y_ndim);
				GET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_DIMS_IDX, averagepool_output_y_dims);
				GET_REG_BY_IDX( AVERAGEPOOL_AUTO_PAD_IDX, averagepool_auto_pad);
				GET_REG_BY_IDX( AVERAGEPOOL_COUNT_INCLUDE_PAD_IDX, averagepool_count_include_pad);
				GET_REG_BY_IDX( AVERAGEPOOL_KERNEL_SHAPE_IDX, averagepool_kernel_shape);
				GET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_KERNEL_SHAPE_IDX, averagepool_number_of_kernel_shape);
				GET_REG_BY_IDX( AVERAGEPOOL_PADS_IDX, averagepool_pads);
				GET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_PADS_IDX, averagepool_number_of_pads);
				GET_REG_BY_IDX( AVERAGEPOOL_STRIDES_IDX, averagepool_strides);
				GET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_STRIDES_IDX, averagepool_number_of_strides);
				GET_REG_BY_IDX( AVERAGEPOOL_TENSOR_NAME_IDX, averagepool_tensor_name);
				GET_REG_BY_IDX( BATCHNORMALIZATION_LAUNCH_IDX, batchnormalization_launch);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_IDX, batchnormalization_input_x);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_NDIM_IDX, batchnormalization_input_x_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_DIMS_IDX, batchnormalization_input_x_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_IDX, batchnormalization_input_scale);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_NDIM_IDX, batchnormalization_input_scale_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_DIMS_IDX, batchnormalization_input_scale_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_IDX, batchnormalization_input_b);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_NDIM_IDX, batchnormalization_input_b_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_DIMS_IDX, batchnormalization_input_b_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_IDX, batchnormalization_input_mean);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_NDIM_IDX, batchnormalization_input_mean_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_DIMS_IDX, batchnormalization_input_mean_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_IDX, batchnormalization_input_var);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_NDIM_IDX, batchnormalization_input_var_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_DIMS_IDX, batchnormalization_input_var_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_IDX, batchnormalization_output_y);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_NDIM_IDX, batchnormalization_output_y_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_DIMS_IDX, batchnormalization_output_y_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_IDX, batchnormalization_output_mean);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_NDIM_IDX, batchnormalization_output_mean_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_DIMS_IDX, batchnormalization_output_mean_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_IDX, batchnormalization_output_var);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_NDIM_IDX, batchnormalization_output_var_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_DIMS_IDX, batchnormalization_output_var_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_IDX, batchnormalization_output_saved_mean);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_NDIM_IDX, batchnormalization_output_saved_mean_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_DIMS_IDX, batchnormalization_output_saved_mean_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_IDX, batchnormalization_output_saved_var);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_NDIM_IDX, batchnormalization_output_saved_var_ndim);
				GET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_DIMS_IDX, batchnormalization_output_saved_var_dims);
				GET_REG_BY_IDX( BATCHNORMALIZATION_EPSILON_IDX, batchnormalization_epsilon);
				GET_REG_BY_IDX( BATCHNORMALIZATION_MOMENTUM_IDX, batchnormalization_momentum);
				GET_REG_BY_IDX( BATCHNORMALIZATION_SPATIAL_IDX, batchnormalization_spatial);
				GET_REG_BY_IDX( BATCHNORMALIZATION_TENSOR_NAME_IDX, batchnormalization_tensor_name);
				GET_REG_BY_IDX( CONCAT_LAUNCH_IDX, concat_launch);
				GET_REG_BY_IDX( CONCAT_INPUT_INPUTS_IDX, concat_input_inputs);
				GET_REG_BY_IDX( CONCAT_INPUT_INPUTS_NTENSOR_IDX, concat_input_inputs_ntensor);
				GET_REG_BY_IDX( CONCAT_INPUT_INPUTS_NDIM_IDX, concat_input_inputs_ndim);
				GET_REG_BY_IDX( CONCAT_INPUT_INPUTS_DIMS_IDX, concat_input_inputs_dims);
				GET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_IDX, concat_output_concat_result);
				GET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_NDIM_IDX, concat_output_concat_result_ndim);
				GET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_DIMS_IDX, concat_output_concat_result_dims);
				GET_REG_BY_IDX( CONCAT_AXIS_IDX, concat_axis);
				GET_REG_BY_IDX( CONCAT_TENSOR_NAME_IDX, concat_tensor_name);
				GET_REG_BY_IDX( CONV_LAUNCH_IDX, conv_launch);
				GET_REG_BY_IDX( CONV_INPUT_X_IDX, conv_input_x);
				GET_REG_BY_IDX( CONV_INPUT_X_NDIM_IDX, conv_input_x_ndim);
				GET_REG_BY_IDX( CONV_INPUT_X_DIMS_IDX, conv_input_x_dims);
				GET_REG_BY_IDX( CONV_INPUT_W_IDX, conv_input_w);
				GET_REG_BY_IDX( CONV_INPUT_W_NDIM_IDX, conv_input_w_ndim);
				GET_REG_BY_IDX( CONV_INPUT_W_DIMS_IDX, conv_input_w_dims);
				GET_REG_BY_IDX( CONV_INPUT_B_IDX, conv_input_b);
				GET_REG_BY_IDX( CONV_INPUT_B_NDIM_IDX, conv_input_b_ndim);
				GET_REG_BY_IDX( CONV_INPUT_B_DIMS_IDX, conv_input_b_dims);
				GET_REG_BY_IDX( CONV_OUTPUT_Y_IDX, conv_output_y);
				GET_REG_BY_IDX( CONV_OUTPUT_Y_NDIM_IDX, conv_output_y_ndim);
				GET_REG_BY_IDX( CONV_OUTPUT_Y_DIMS_IDX, conv_output_y_dims);
				GET_REG_BY_IDX( CONV_AUTO_PAD_IDX, conv_auto_pad);
				GET_REG_BY_IDX( CONV_DILATIONS_IDX, conv_dilations);
				GET_REG_BY_IDX( CONV_NUMBER_OF_DILATIONS_IDX, conv_number_of_dilations);
				GET_REG_BY_IDX( CONV_GROUP_IDX, conv_group);
				GET_REG_BY_IDX( CONV_KERNEL_SHAPE_IDX, conv_kernel_shape);
				GET_REG_BY_IDX( CONV_NUMBER_OF_KERNEL_SHAPE_IDX, conv_number_of_kernel_shape);
				GET_REG_BY_IDX( CONV_PADS_IDX, conv_pads);
				GET_REG_BY_IDX( CONV_NUMBER_OF_PADS_IDX, conv_number_of_pads);
				GET_REG_BY_IDX( CONV_STRIDES_IDX, conv_strides);
				GET_REG_BY_IDX( CONV_NUMBER_OF_STRIDES_IDX, conv_number_of_strides);
				GET_REG_BY_IDX( CONV_TENSOR_NAME_IDX, conv_tensor_name);
				GET_REG_BY_IDX( GEMM_LAUNCH_IDX, gemm_launch);
				GET_REG_BY_IDX( GEMM_INPUT_A_IDX, gemm_input_a);
				GET_REG_BY_IDX( GEMM_INPUT_A_NDIM_IDX, gemm_input_a_ndim);
				GET_REG_BY_IDX( GEMM_INPUT_A_DIMS_IDX, gemm_input_a_dims);
				GET_REG_BY_IDX( GEMM_INPUT_B_IDX, gemm_input_b);
				GET_REG_BY_IDX( GEMM_INPUT_B_NDIM_IDX, gemm_input_b_ndim);
				GET_REG_BY_IDX( GEMM_INPUT_B_DIMS_IDX, gemm_input_b_dims);
				GET_REG_BY_IDX( GEMM_INPUT_C_IDX, gemm_input_c);
				GET_REG_BY_IDX( GEMM_INPUT_C_NDIM_IDX, gemm_input_c_ndim);
				GET_REG_BY_IDX( GEMM_INPUT_C_DIMS_IDX, gemm_input_c_dims);
				GET_REG_BY_IDX( GEMM_OUTPUT_Y_IDX, gemm_output_y);
				GET_REG_BY_IDX( GEMM_OUTPUT_Y_NDIM_IDX, gemm_output_y_ndim);
				GET_REG_BY_IDX( GEMM_OUTPUT_Y_DIMS_IDX, gemm_output_y_dims);
				GET_REG_BY_IDX( GEMM_ALPHA_IDX, gemm_alpha);
				GET_REG_BY_IDX( GEMM_BETA_IDX, gemm_beta);
				GET_REG_BY_IDX( GEMM_TRANSA_IDX, gemm_transa);
				GET_REG_BY_IDX( GEMM_TRANSB_IDX, gemm_transb);
				GET_REG_BY_IDX( GEMM_TENSOR_NAME_IDX, gemm_tensor_name);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_LAUNCH_IDX, globalaveragepool_launch);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_IDX, globalaveragepool_input_x);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_NDIM_IDX, globalaveragepool_input_x_ndim);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_DIMS_IDX, globalaveragepool_input_x_dims);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_IDX, globalaveragepool_output_y);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_NDIM_IDX, globalaveragepool_output_y_ndim);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_DIMS_IDX, globalaveragepool_output_y_dims);
				GET_REG_BY_IDX( GLOBALAVERAGEPOOL_TENSOR_NAME_IDX, globalaveragepool_tensor_name);
				GET_REG_BY_IDX( LRN_LAUNCH_IDX, lrn_launch);
				GET_REG_BY_IDX( LRN_INPUT_X_IDX, lrn_input_x);
				GET_REG_BY_IDX( LRN_INPUT_X_NDIM_IDX, lrn_input_x_ndim);
				GET_REG_BY_IDX( LRN_INPUT_X_DIMS_IDX, lrn_input_x_dims);
				GET_REG_BY_IDX( LRN_OUTPUT_Y_IDX, lrn_output_y);
				GET_REG_BY_IDX( LRN_OUTPUT_Y_NDIM_IDX, lrn_output_y_ndim);
				GET_REG_BY_IDX( LRN_OUTPUT_Y_DIMS_IDX, lrn_output_y_dims);
				GET_REG_BY_IDX( LRN_ALPHA_IDX, lrn_alpha);
				GET_REG_BY_IDX( LRN_BETA_IDX, lrn_beta);
				GET_REG_BY_IDX( LRN_BIAS_IDX, lrn_bias);
				GET_REG_BY_IDX( LRN_SIZE_IDX, lrn_size);
				GET_REG_BY_IDX( LRN_TENSOR_NAME_IDX, lrn_tensor_name);
				GET_REG_BY_IDX( MAXPOOL_LAUNCH_IDX, maxpool_launch);
				GET_REG_BY_IDX( MAXPOOL_INPUT_X_IDX, maxpool_input_x);
				GET_REG_BY_IDX( MAXPOOL_INPUT_X_NDIM_IDX, maxpool_input_x_ndim);
				GET_REG_BY_IDX( MAXPOOL_INPUT_X_DIMS_IDX, maxpool_input_x_dims);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_IDX, maxpool_output_y);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_NDIM_IDX, maxpool_output_y_ndim);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_DIMS_IDX, maxpool_output_y_dims);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_IDX, maxpool_output_indices);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_NDIM_IDX, maxpool_output_indices_ndim);
				GET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_DIMS_IDX, maxpool_output_indices_dims);
				GET_REG_BY_IDX( MAXPOOL_AUTO_PAD_IDX, maxpool_auto_pad);
				GET_REG_BY_IDX( MAXPOOL_KERNEL_SHAPE_IDX, maxpool_kernel_shape);
				GET_REG_BY_IDX( MAXPOOL_NUMBER_OF_KERNEL_SHAPE_IDX, maxpool_number_of_kernel_shape);
				GET_REG_BY_IDX( MAXPOOL_PADS_IDX, maxpool_pads);
				GET_REG_BY_IDX( MAXPOOL_NUMBER_OF_PADS_IDX, maxpool_number_of_pads);
				GET_REG_BY_IDX( MAXPOOL_STORAGE_ORDER_IDX, maxpool_storage_order);
				GET_REG_BY_IDX( MAXPOOL_STRIDES_IDX, maxpool_strides);
				GET_REG_BY_IDX( MAXPOOL_NUMBER_OF_STRIDES_IDX, maxpool_number_of_strides);
				GET_REG_BY_IDX( MAXPOOL_TENSOR_NAME_IDX, maxpool_tensor_name);
				GET_REG_BY_IDX( MUL_LAUNCH_IDX, mul_launch);
				GET_REG_BY_IDX( MUL_INPUT_A_IDX, mul_input_a);
				GET_REG_BY_IDX( MUL_INPUT_A_NDIM_IDX, mul_input_a_ndim);
				GET_REG_BY_IDX( MUL_INPUT_A_DIMS_IDX, mul_input_a_dims);
				GET_REG_BY_IDX( MUL_INPUT_B_IDX, mul_input_b);
				GET_REG_BY_IDX( MUL_INPUT_B_NDIM_IDX, mul_input_b_ndim);
				GET_REG_BY_IDX( MUL_INPUT_B_DIMS_IDX, mul_input_b_dims);
				GET_REG_BY_IDX( MUL_OUTPUT_C_IDX, mul_output_c);
				GET_REG_BY_IDX( MUL_OUTPUT_C_NDIM_IDX, mul_output_c_ndim);
				GET_REG_BY_IDX( MUL_OUTPUT_C_DIMS_IDX, mul_output_c_dims);
				GET_REG_BY_IDX( MUL_TENSOR_NAME_IDX, mul_tensor_name);
				GET_REG_BY_IDX( RELU_LAUNCH_IDX, relu_launch);
				GET_REG_BY_IDX( RELU_INPUT_X_IDX, relu_input_x);
				GET_REG_BY_IDX( RELU_INPUT_X_NDIM_IDX, relu_input_x_ndim);
				GET_REG_BY_IDX( RELU_INPUT_X_DIMS_IDX, relu_input_x_dims);
				GET_REG_BY_IDX( RELU_OUTPUT_Y_IDX, relu_output_y);
				GET_REG_BY_IDX( RELU_OUTPUT_Y_NDIM_IDX, relu_output_y_ndim);
				GET_REG_BY_IDX( RELU_OUTPUT_Y_DIMS_IDX, relu_output_y_dims);
				GET_REG_BY_IDX( RELU_TENSOR_NAME_IDX, relu_tensor_name);
				GET_REG_BY_IDX( RESHAPE_LAUNCH_IDX, reshape_launch);
				GET_REG_BY_IDX( RESHAPE_INPUT_DATA_IDX, reshape_input_data);
				GET_REG_BY_IDX( RESHAPE_INPUT_DATA_NDIM_IDX, reshape_input_data_ndim);
				GET_REG_BY_IDX( RESHAPE_INPUT_DATA_DIMS_IDX, reshape_input_data_dims);
				GET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_IDX, reshape_input_shape);
				GET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_NDIM_IDX, reshape_input_shape_ndim);
				GET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_DIMS_IDX, reshape_input_shape_dims);
				GET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_IDX, reshape_output_reshaped);
				GET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_NDIM_IDX, reshape_output_reshaped_ndim);
				GET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_DIMS_IDX, reshape_output_reshaped_dims);
				GET_REG_BY_IDX( RESHAPE_TENSOR_NAME_IDX, reshape_tensor_name);
				GET_REG_BY_IDX( SOFTMAX_LAUNCH_IDX, softmax_launch);
				GET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_IDX, softmax_input_input);
				GET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_NDIM_IDX, softmax_input_input_ndim);
				GET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_DIMS_IDX, softmax_input_input_dims);
				GET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_IDX, softmax_output_output);
				GET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_NDIM_IDX, softmax_output_output_ndim);
				GET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_DIMS_IDX, softmax_output_output_dims);
				GET_REG_BY_IDX( SOFTMAX_AXIS_IDX, softmax_axis);
				GET_REG_BY_IDX( SOFTMAX_TENSOR_NAME_IDX, softmax_tensor_name);
				GET_REG_BY_IDX( SUM_LAUNCH_IDX, sum_launch);
				GET_REG_BY_IDX( SUM_INPUT_DATA_0_IDX, sum_input_data_0);
				GET_REG_BY_IDX( SUM_INPUT_DATA_0_NTENSOR_IDX, sum_input_data_0_ntensor);
				GET_REG_BY_IDX( SUM_INPUT_DATA_0_NDIM_IDX, sum_input_data_0_ndim);
				GET_REG_BY_IDX( SUM_INPUT_DATA_0_DIMS_IDX, sum_input_data_0_dims);
				GET_REG_BY_IDX( SUM_OUTPUT_SUM_IDX, sum_output_sum);
				GET_REG_BY_IDX( SUM_OUTPUT_SUM_NDIM_IDX, sum_output_sum_ndim);
				GET_REG_BY_IDX( SUM_OUTPUT_SUM_DIMS_IDX, sum_output_sum_dims);
				GET_REG_BY_IDX( SUM_TENSOR_NAME_IDX, sum_tensor_name);
				GET_REG_BY_IDX( TRANSPOSE_LAUNCH_IDX, transpose_launch);
				GET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_IDX, transpose_input_data);
				GET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_NDIM_IDX, transpose_input_data_ndim);
				GET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_DIMS_IDX, transpose_input_data_dims);
				GET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_IDX, transpose_output_transposed);
				GET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_NDIM_IDX, transpose_output_transposed_ndim);
				GET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_DIMS_IDX, transpose_output_transposed_dims);
				GET_REG_BY_IDX( TRANSPOSE_PERM_IDX, transpose_perm);
				GET_REG_BY_IDX( TRANSPOSE_NUMBER_OF_PERM_IDX, transpose_number_of_perm);
				GET_REG_BY_IDX( TRANSPOSE_TENSOR_NAME_IDX, transpose_tensor_name);
				GET_REG_BY_IDX( UNSQUEEZE_LAUNCH_IDX, unsqueeze_launch);
				GET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_IDX, unsqueeze_input_data);
				GET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_NDIM_IDX, unsqueeze_input_data_ndim);
				GET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_DIMS_IDX, unsqueeze_input_data_dims);
				GET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_IDX, unsqueeze_output_expanded);
				GET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_NDIM_IDX, unsqueeze_output_expanded_ndim);
				GET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_DIMS_IDX, unsqueeze_output_expanded_dims);
				GET_REG_BY_IDX( UNSQUEEZE_AXES_IDX, unsqueeze_axes);
				GET_REG_BY_IDX( UNSQUEEZE_NUMBER_OF_AXES_IDX, unsqueeze_number_of_axes);
				GET_REG_BY_IDX( UNSQUEEZE_TENSOR_NAME_IDX, unsqueeze_tensor_name);
				default: 
					fprintf(stderr, "Warning: Invalid register read from FastModel addr=0x%x \n", addr);
					return 0;   
			} // end of switch
	  	}
	  	void regWrite(SimObject *sender, address_type addr, reg_type data) override {

	  		const address_type offset    = static_cast<address_type>(addr & 0xfff);

			switch(offset/4){
				SET_REG_BY_IDX_W_HANDLER( ADD_LAUNCH_IDX, on_set_launch_add(data));
				SET_REG_BY_IDX( ADD_INPUT_A_IDX, add_input_a, data);
				SET_REG_BY_IDX( ADD_INPUT_A_NDIM_IDX, add_input_a_ndim, data);
				SET_REG_BY_IDX( ADD_INPUT_A_DIMS_IDX, add_input_a_dims, data);
				SET_REG_BY_IDX( ADD_INPUT_B_IDX, add_input_b, data);
				SET_REG_BY_IDX( ADD_INPUT_B_NDIM_IDX, add_input_b_ndim, data);
				SET_REG_BY_IDX( ADD_INPUT_B_DIMS_IDX, add_input_b_dims, data);
				SET_REG_BY_IDX( ADD_OUTPUT_C_IDX, add_output_c, data);
				SET_REG_BY_IDX( ADD_OUTPUT_C_NDIM_IDX, add_output_c_ndim, data);
				SET_REG_BY_IDX( ADD_OUTPUT_C_DIMS_IDX, add_output_c_dims, data);
				SET_REG_BY_IDX( ADD_TENSOR_NAME_IDX, add_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( AVERAGEPOOL_LAUNCH_IDX, on_set_launch_averagepool(data));
				SET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_IDX, averagepool_input_x, data);
				SET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_NDIM_IDX, averagepool_input_x_ndim, data);
				SET_REG_BY_IDX( AVERAGEPOOL_INPUT_X_DIMS_IDX, averagepool_input_x_dims, data);
				SET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_IDX, averagepool_output_y, data);
				SET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_NDIM_IDX, averagepool_output_y_ndim, data);
				SET_REG_BY_IDX( AVERAGEPOOL_OUTPUT_Y_DIMS_IDX, averagepool_output_y_dims, data);
				SET_REG_BY_IDX( AVERAGEPOOL_AUTO_PAD_IDX, averagepool_auto_pad, data);
				SET_REG_BY_IDX( AVERAGEPOOL_COUNT_INCLUDE_PAD_IDX, averagepool_count_include_pad, data);
				SET_REG_BY_IDX( AVERAGEPOOL_KERNEL_SHAPE_IDX, averagepool_kernel_shape, data);
				SET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_KERNEL_SHAPE_IDX, averagepool_number_of_kernel_shape, data);
				SET_REG_BY_IDX( AVERAGEPOOL_PADS_IDX, averagepool_pads, data);
				SET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_PADS_IDX, averagepool_number_of_pads, data);
				SET_REG_BY_IDX( AVERAGEPOOL_STRIDES_IDX, averagepool_strides, data);
				SET_REG_BY_IDX( AVERAGEPOOL_NUMBER_OF_STRIDES_IDX, averagepool_number_of_strides, data);
				SET_REG_BY_IDX( AVERAGEPOOL_TENSOR_NAME_IDX, averagepool_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( BATCHNORMALIZATION_LAUNCH_IDX, on_set_launch_batchnormalization(data));
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_IDX, batchnormalization_input_x, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_NDIM_IDX, batchnormalization_input_x_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_X_DIMS_IDX, batchnormalization_input_x_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_IDX, batchnormalization_input_scale, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_NDIM_IDX, batchnormalization_input_scale_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_SCALE_DIMS_IDX, batchnormalization_input_scale_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_IDX, batchnormalization_input_b, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_NDIM_IDX, batchnormalization_input_b_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_B_DIMS_IDX, batchnormalization_input_b_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_IDX, batchnormalization_input_mean, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_NDIM_IDX, batchnormalization_input_mean_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_MEAN_DIMS_IDX, batchnormalization_input_mean_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_IDX, batchnormalization_input_var, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_NDIM_IDX, batchnormalization_input_var_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_INPUT_VAR_DIMS_IDX, batchnormalization_input_var_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_IDX, batchnormalization_output_y, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_NDIM_IDX, batchnormalization_output_y_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_Y_DIMS_IDX, batchnormalization_output_y_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_IDX, batchnormalization_output_mean, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_NDIM_IDX, batchnormalization_output_mean_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_MEAN_DIMS_IDX, batchnormalization_output_mean_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_IDX, batchnormalization_output_var, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_NDIM_IDX, batchnormalization_output_var_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_VAR_DIMS_IDX, batchnormalization_output_var_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_IDX, batchnormalization_output_saved_mean, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_NDIM_IDX, batchnormalization_output_saved_mean_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_MEAN_DIMS_IDX, batchnormalization_output_saved_mean_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_IDX, batchnormalization_output_saved_var, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_NDIM_IDX, batchnormalization_output_saved_var_ndim, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_OUTPUT_SAVED_VAR_DIMS_IDX, batchnormalization_output_saved_var_dims, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_EPSILON_IDX, batchnormalization_epsilon, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_MOMENTUM_IDX, batchnormalization_momentum, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_SPATIAL_IDX, batchnormalization_spatial, data);
				SET_REG_BY_IDX( BATCHNORMALIZATION_TENSOR_NAME_IDX, batchnormalization_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( CONCAT_LAUNCH_IDX, on_set_launch_concat(data));
				SET_REG_BY_IDX( CONCAT_INPUT_INPUTS_IDX, concat_input_inputs, data);
				SET_REG_BY_IDX( CONCAT_INPUT_INPUTS_NTENSOR_IDX, concat_input_inputs_ntensor, data);
				SET_REG_BY_IDX( CONCAT_INPUT_INPUTS_NDIM_IDX, concat_input_inputs_ndim, data);
				SET_REG_BY_IDX( CONCAT_INPUT_INPUTS_DIMS_IDX, concat_input_inputs_dims, data);
				SET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_IDX, concat_output_concat_result, data);
				SET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_NDIM_IDX, concat_output_concat_result_ndim, data);
				SET_REG_BY_IDX( CONCAT_OUTPUT_CONCAT_RESULT_DIMS_IDX, concat_output_concat_result_dims, data);
				SET_REG_BY_IDX( CONCAT_AXIS_IDX, concat_axis, data);
				SET_REG_BY_IDX( CONCAT_TENSOR_NAME_IDX, concat_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( CONV_LAUNCH_IDX, on_set_launch_conv(data));
				SET_REG_BY_IDX( CONV_INPUT_X_IDX, conv_input_x, data);
				SET_REG_BY_IDX( CONV_INPUT_X_NDIM_IDX, conv_input_x_ndim, data);
				SET_REG_BY_IDX( CONV_INPUT_X_DIMS_IDX, conv_input_x_dims, data);
				SET_REG_BY_IDX( CONV_INPUT_W_IDX, conv_input_w, data);
				SET_REG_BY_IDX( CONV_INPUT_W_NDIM_IDX, conv_input_w_ndim, data);
				SET_REG_BY_IDX( CONV_INPUT_W_DIMS_IDX, conv_input_w_dims, data);
				SET_REG_BY_IDX( CONV_INPUT_B_IDX, conv_input_b, data);
				SET_REG_BY_IDX( CONV_INPUT_B_NDIM_IDX, conv_input_b_ndim, data);
				SET_REG_BY_IDX( CONV_INPUT_B_DIMS_IDX, conv_input_b_dims, data);
				SET_REG_BY_IDX( CONV_OUTPUT_Y_IDX, conv_output_y, data);
				SET_REG_BY_IDX( CONV_OUTPUT_Y_NDIM_IDX, conv_output_y_ndim, data);
				SET_REG_BY_IDX( CONV_OUTPUT_Y_DIMS_IDX, conv_output_y_dims, data);
				SET_REG_BY_IDX( CONV_AUTO_PAD_IDX, conv_auto_pad, data);
				SET_REG_BY_IDX( CONV_DILATIONS_IDX, conv_dilations, data);
				SET_REG_BY_IDX( CONV_NUMBER_OF_DILATIONS_IDX, conv_number_of_dilations, data);
				SET_REG_BY_IDX( CONV_GROUP_IDX, conv_group, data);
				SET_REG_BY_IDX( CONV_KERNEL_SHAPE_IDX, conv_kernel_shape, data);
				SET_REG_BY_IDX( CONV_NUMBER_OF_KERNEL_SHAPE_IDX, conv_number_of_kernel_shape, data);
				SET_REG_BY_IDX( CONV_PADS_IDX, conv_pads, data);
				SET_REG_BY_IDX( CONV_NUMBER_OF_PADS_IDX, conv_number_of_pads, data);
				SET_REG_BY_IDX( CONV_STRIDES_IDX, conv_strides, data);
				SET_REG_BY_IDX( CONV_NUMBER_OF_STRIDES_IDX, conv_number_of_strides, data);
				SET_REG_BY_IDX( CONV_TENSOR_NAME_IDX, conv_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( GEMM_LAUNCH_IDX, on_set_launch_gemm(data));
				SET_REG_BY_IDX( GEMM_INPUT_A_IDX, gemm_input_a, data);
				SET_REG_BY_IDX( GEMM_INPUT_A_NDIM_IDX, gemm_input_a_ndim, data);
				SET_REG_BY_IDX( GEMM_INPUT_A_DIMS_IDX, gemm_input_a_dims, data);
				SET_REG_BY_IDX( GEMM_INPUT_B_IDX, gemm_input_b, data);
				SET_REG_BY_IDX( GEMM_INPUT_B_NDIM_IDX, gemm_input_b_ndim, data);
				SET_REG_BY_IDX( GEMM_INPUT_B_DIMS_IDX, gemm_input_b_dims, data);
				SET_REG_BY_IDX( GEMM_INPUT_C_IDX, gemm_input_c, data);
				SET_REG_BY_IDX( GEMM_INPUT_C_NDIM_IDX, gemm_input_c_ndim, data);
				SET_REG_BY_IDX( GEMM_INPUT_C_DIMS_IDX, gemm_input_c_dims, data);
				SET_REG_BY_IDX( GEMM_OUTPUT_Y_IDX, gemm_output_y, data);
				SET_REG_BY_IDX( GEMM_OUTPUT_Y_NDIM_IDX, gemm_output_y_ndim, data);
				SET_REG_BY_IDX( GEMM_OUTPUT_Y_DIMS_IDX, gemm_output_y_dims, data);
				SET_REG_BY_IDX( GEMM_ALPHA_IDX, gemm_alpha, data);
				SET_REG_BY_IDX( GEMM_BETA_IDX, gemm_beta, data);
				SET_REG_BY_IDX( GEMM_TRANSA_IDX, gemm_transa, data);
				SET_REG_BY_IDX( GEMM_TRANSB_IDX, gemm_transb, data);
				SET_REG_BY_IDX( GEMM_TENSOR_NAME_IDX, gemm_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( GLOBALAVERAGEPOOL_LAUNCH_IDX, on_set_launch_globalaveragepool(data));
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_IDX, globalaveragepool_input_x, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_NDIM_IDX, globalaveragepool_input_x_ndim, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_INPUT_X_DIMS_IDX, globalaveragepool_input_x_dims, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_IDX, globalaveragepool_output_y, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_NDIM_IDX, globalaveragepool_output_y_ndim, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_OUTPUT_Y_DIMS_IDX, globalaveragepool_output_y_dims, data);
				SET_REG_BY_IDX( GLOBALAVERAGEPOOL_TENSOR_NAME_IDX, globalaveragepool_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( LRN_LAUNCH_IDX, on_set_launch_lrn(data));
				SET_REG_BY_IDX( LRN_INPUT_X_IDX, lrn_input_x, data);
				SET_REG_BY_IDX( LRN_INPUT_X_NDIM_IDX, lrn_input_x_ndim, data);
				SET_REG_BY_IDX( LRN_INPUT_X_DIMS_IDX, lrn_input_x_dims, data);
				SET_REG_BY_IDX( LRN_OUTPUT_Y_IDX, lrn_output_y, data);
				SET_REG_BY_IDX( LRN_OUTPUT_Y_NDIM_IDX, lrn_output_y_ndim, data);
				SET_REG_BY_IDX( LRN_OUTPUT_Y_DIMS_IDX, lrn_output_y_dims, data);
				SET_REG_BY_IDX( LRN_ALPHA_IDX, lrn_alpha, data);
				SET_REG_BY_IDX( LRN_BETA_IDX, lrn_beta, data);
				SET_REG_BY_IDX( LRN_BIAS_IDX, lrn_bias, data);
				SET_REG_BY_IDX( LRN_SIZE_IDX, lrn_size, data);
				SET_REG_BY_IDX( LRN_TENSOR_NAME_IDX, lrn_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( MAXPOOL_LAUNCH_IDX, on_set_launch_maxpool(data));
				SET_REG_BY_IDX( MAXPOOL_INPUT_X_IDX, maxpool_input_x, data);
				SET_REG_BY_IDX( MAXPOOL_INPUT_X_NDIM_IDX, maxpool_input_x_ndim, data);
				SET_REG_BY_IDX( MAXPOOL_INPUT_X_DIMS_IDX, maxpool_input_x_dims, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_IDX, maxpool_output_y, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_NDIM_IDX, maxpool_output_y_ndim, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_Y_DIMS_IDX, maxpool_output_y_dims, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_IDX, maxpool_output_indices, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_NDIM_IDX, maxpool_output_indices_ndim, data);
				SET_REG_BY_IDX( MAXPOOL_OUTPUT_INDICES_DIMS_IDX, maxpool_output_indices_dims, data);
				SET_REG_BY_IDX( MAXPOOL_AUTO_PAD_IDX, maxpool_auto_pad, data);
				SET_REG_BY_IDX( MAXPOOL_KERNEL_SHAPE_IDX, maxpool_kernel_shape, data);
				SET_REG_BY_IDX( MAXPOOL_NUMBER_OF_KERNEL_SHAPE_IDX, maxpool_number_of_kernel_shape, data);
				SET_REG_BY_IDX( MAXPOOL_PADS_IDX, maxpool_pads, data);
				SET_REG_BY_IDX( MAXPOOL_NUMBER_OF_PADS_IDX, maxpool_number_of_pads, data);
				SET_REG_BY_IDX( MAXPOOL_STORAGE_ORDER_IDX, maxpool_storage_order, data);
				SET_REG_BY_IDX( MAXPOOL_STRIDES_IDX, maxpool_strides, data);
				SET_REG_BY_IDX( MAXPOOL_NUMBER_OF_STRIDES_IDX, maxpool_number_of_strides, data);
				SET_REG_BY_IDX( MAXPOOL_TENSOR_NAME_IDX, maxpool_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( MUL_LAUNCH_IDX, on_set_launch_mul(data));
				SET_REG_BY_IDX( MUL_INPUT_A_IDX, mul_input_a, data);
				SET_REG_BY_IDX( MUL_INPUT_A_NDIM_IDX, mul_input_a_ndim, data);
				SET_REG_BY_IDX( MUL_INPUT_A_DIMS_IDX, mul_input_a_dims, data);
				SET_REG_BY_IDX( MUL_INPUT_B_IDX, mul_input_b, data);
				SET_REG_BY_IDX( MUL_INPUT_B_NDIM_IDX, mul_input_b_ndim, data);
				SET_REG_BY_IDX( MUL_INPUT_B_DIMS_IDX, mul_input_b_dims, data);
				SET_REG_BY_IDX( MUL_OUTPUT_C_IDX, mul_output_c, data);
				SET_REG_BY_IDX( MUL_OUTPUT_C_NDIM_IDX, mul_output_c_ndim, data);
				SET_REG_BY_IDX( MUL_OUTPUT_C_DIMS_IDX, mul_output_c_dims, data);
				SET_REG_BY_IDX( MUL_TENSOR_NAME_IDX, mul_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( RELU_LAUNCH_IDX, on_set_launch_relu(data));
				SET_REG_BY_IDX( RELU_INPUT_X_IDX, relu_input_x, data);
				SET_REG_BY_IDX( RELU_INPUT_X_NDIM_IDX, relu_input_x_ndim, data);
				SET_REG_BY_IDX( RELU_INPUT_X_DIMS_IDX, relu_input_x_dims, data);
				SET_REG_BY_IDX( RELU_OUTPUT_Y_IDX, relu_output_y, data);
				SET_REG_BY_IDX( RELU_OUTPUT_Y_NDIM_IDX, relu_output_y_ndim, data);
				SET_REG_BY_IDX( RELU_OUTPUT_Y_DIMS_IDX, relu_output_y_dims, data);
				SET_REG_BY_IDX( RELU_TENSOR_NAME_IDX, relu_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( RESHAPE_LAUNCH_IDX, on_set_launch_reshape(data));
				SET_REG_BY_IDX( RESHAPE_INPUT_DATA_IDX, reshape_input_data, data);
				SET_REG_BY_IDX( RESHAPE_INPUT_DATA_NDIM_IDX, reshape_input_data_ndim, data);
				SET_REG_BY_IDX( RESHAPE_INPUT_DATA_DIMS_IDX, reshape_input_data_dims, data);
				SET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_IDX, reshape_input_shape, data);
				SET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_NDIM_IDX, reshape_input_shape_ndim, data);
				SET_REG_BY_IDX( RESHAPE_INPUT_SHAPE_DIMS_IDX, reshape_input_shape_dims, data);
				SET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_IDX, reshape_output_reshaped, data);
				SET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_NDIM_IDX, reshape_output_reshaped_ndim, data);
				SET_REG_BY_IDX( RESHAPE_OUTPUT_RESHAPED_DIMS_IDX, reshape_output_reshaped_dims, data);
				SET_REG_BY_IDX( RESHAPE_TENSOR_NAME_IDX, reshape_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( SOFTMAX_LAUNCH_IDX, on_set_launch_softmax(data));
				SET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_IDX, softmax_input_input, data);
				SET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_NDIM_IDX, softmax_input_input_ndim, data);
				SET_REG_BY_IDX( SOFTMAX_INPUT_INPUT_DIMS_IDX, softmax_input_input_dims, data);
				SET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_IDX, softmax_output_output, data);
				SET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_NDIM_IDX, softmax_output_output_ndim, data);
				SET_REG_BY_IDX( SOFTMAX_OUTPUT_OUTPUT_DIMS_IDX, softmax_output_output_dims, data);
				SET_REG_BY_IDX( SOFTMAX_AXIS_IDX, softmax_axis, data);
				SET_REG_BY_IDX( SOFTMAX_TENSOR_NAME_IDX, softmax_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( SUM_LAUNCH_IDX, on_set_launch_sum(data));
				SET_REG_BY_IDX( SUM_INPUT_DATA_0_IDX, sum_input_data_0, data);
				SET_REG_BY_IDX( SUM_INPUT_DATA_0_NTENSOR_IDX, sum_input_data_0_ntensor, data);
				SET_REG_BY_IDX( SUM_INPUT_DATA_0_NDIM_IDX, sum_input_data_0_ndim, data);
				SET_REG_BY_IDX( SUM_INPUT_DATA_0_DIMS_IDX, sum_input_data_0_dims, data);
				SET_REG_BY_IDX( SUM_OUTPUT_SUM_IDX, sum_output_sum, data);
				SET_REG_BY_IDX( SUM_OUTPUT_SUM_NDIM_IDX, sum_output_sum_ndim, data);
				SET_REG_BY_IDX( SUM_OUTPUT_SUM_DIMS_IDX, sum_output_sum_dims, data);
				SET_REG_BY_IDX( SUM_TENSOR_NAME_IDX, sum_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( TRANSPOSE_LAUNCH_IDX, on_set_launch_transpose(data));
				SET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_IDX, transpose_input_data, data);
				SET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_NDIM_IDX, transpose_input_data_ndim, data);
				SET_REG_BY_IDX( TRANSPOSE_INPUT_DATA_DIMS_IDX, transpose_input_data_dims, data);
				SET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_IDX, transpose_output_transposed, data);
				SET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_NDIM_IDX, transpose_output_transposed_ndim, data);
				SET_REG_BY_IDX( TRANSPOSE_OUTPUT_TRANSPOSED_DIMS_IDX, transpose_output_transposed_dims, data);
				SET_REG_BY_IDX( TRANSPOSE_PERM_IDX, transpose_perm, data);
				SET_REG_BY_IDX( TRANSPOSE_NUMBER_OF_PERM_IDX, transpose_number_of_perm, data);
				SET_REG_BY_IDX( TRANSPOSE_TENSOR_NAME_IDX, transpose_tensor_name, data);
				SET_REG_BY_IDX_W_HANDLER( UNSQUEEZE_LAUNCH_IDX, on_set_launch_unsqueeze(data));
				SET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_IDX, unsqueeze_input_data, data);
				SET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_NDIM_IDX, unsqueeze_input_data_ndim, data);
				SET_REG_BY_IDX( UNSQUEEZE_INPUT_DATA_DIMS_IDX, unsqueeze_input_data_dims, data);
				SET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_IDX, unsqueeze_output_expanded, data);
				SET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_NDIM_IDX, unsqueeze_output_expanded_ndim, data);
				SET_REG_BY_IDX( UNSQUEEZE_OUTPUT_EXPANDED_DIMS_IDX, unsqueeze_output_expanded_dims, data);
				SET_REG_BY_IDX( UNSQUEEZE_AXES_IDX, unsqueeze_axes, data);
				SET_REG_BY_IDX( UNSQUEEZE_NUMBER_OF_AXES_IDX, unsqueeze_number_of_axes, data);
				SET_REG_BY_IDX( UNSQUEEZE_TENSOR_NAME_IDX, unsqueeze_tensor_name, data);
				default: 
					fprintf(stderr, "Warning: Invalid register write to FastModel addr=0x%x  value=0x%x\n", addr, data);
					break;       
			} // end of switch
	  	}
};
